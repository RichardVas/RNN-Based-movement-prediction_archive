Vázlat kieg:

Elozo reszeket alsohangon kene atirni, hogy erre a 3 fejezetre elesednek ki

fejlesztes menete:
	- Pytorch, Numpy, Yolo, OpenCV, konyvtarak bemutatasa
	- milyen fejlesztesi elvet hasznaltam evollucios
	- elsajátított módszerek: Mátrixműveletek, .reshape(), .view(), dimenzionalitas fontossaga
	- fejlesztes soran felmerulo problemak: leginkabb a szamomra megfelelo dolgok kivalasztasa, es azok parameterei( trial and error), milyen optim milyen LR, milyen loss fV, milyen normalizalas stb.., sok elsajatidando eszkoz

Működési elv:
	- Roviden bemutatni a hasznalt modulokat
	- hasznalt datasettek ( altalam generalt iranyos dset, COCO dset from yolo
	- normalizálást
	- Flowchart + magyarazat a 3 fo objektumhoz(hosszan) ( Sliding window modell)
	- bemutatni a használt optimzert, loss fv-t, epochok számát, 
	- Tesztelés evaluáció magyarázása (chartok, tensorboardok, accuracy %, számok, tesztesetek)

Jovobeli fejleszesi lehetőségek:
	- C++-ban a jobb teljesitmenyert, ROS, 
	- erosebb HW-el, akar Google Colab
	- nagyobb meretu, komplexebb halozat
	- Tracker modulon változtatni, esetleg Kalman Filter, vagy DEEPSort, röviden, hogy miert lennenek jobbak stb..
